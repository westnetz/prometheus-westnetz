version: "3.4"

services:
  snmp-exporter:
    image: prom/snmp-exporter:v0.15.0@sha256:dd340b95d0749c5af15a15601ba57d4169084263ea34d7c642dd72357705eba1
    read_only: yes
    volumes:
      - type: bind
        source: ./snmp-exporter/snmp.yml
        target: /etc/snmp_exporter/snmp.yml
        read_only: true
    networks:
      - prometheus-exporters
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:snmp.${HOSTNAME}"
      - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.docker.network=traefik"
      - "traefik.port=9116"
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.14.0@sha256:c20445e0cc628fa4b227fe2f694c22a314beb43fd8297095b6ee6cbc67161336
    read_only: yes
    volumes:
      - type: bind
        source: ./blackbox-exporter/config.yml
        target: /etc/blackbox_exporter/config.yml
        read_only: true
    networks:
      - prometheus-exporters
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:blackbox.${HOSTNAME}"
      - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.docker.network=traefik"
      - "traefik.port=9115"
  prometheus:
    image: prom/prometheus:v2.9.2@sha256:05350e0d1a577674442046961abf56b3e883dcd82346962f9e73f00667958f6b
    read_only: yes
    command:
      # The following options are from https://github.com/prometheus/prometheus/blob/master/Dockerfile
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      # The following options are our own
      - "--storage.tsdb.retention.size=60GB"
    volumes:
      - type: bind
        source: "${PROMETHEUS_CONFIG:-./prometheus/prometheus.yml}"
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - type: bind
        source: "${PROMETHEUS_PING:-./prometheus/ping.json}"
        target: /etc/prometheus/ping.json
        read_only: true
      - type: volume
        source: prometheus
        target: /prometheus
    networks:
      - prometheus-exporters
      - prometheus-frontend
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:prometheus.${HOSTNAME}"
      - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.docker.network=traefik"
      - "traefik.port=9090"
  grafana:
    image: grafana/grafana:6.1.6@sha256:d66b41cf7e0586274ca3e15e03299e4cfde48019fd756bb97cc9db57da9b0c86
    read_only: yes
    volumes:
      - type: volume
        source: grafana
        target: /var/lib/grafana
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-polystat-panel"
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${HOSTNAME}"
      - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.docker.network=traefik"
      - "traefik.port=3000"
    networks:
      - prometheus-frontend
      - traefik
  traefik:
    image: traefik:1.7-alpine@sha256:21c7362d6f294752e78b76b61374c1cacbd5c66ba49a401d5a69be3ed0937671
    read_only: yes
    command: --api --docker --docker.exposedbydefault=false
    ports:
      - 80:80
      - 443:443
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ./traefik.toml
        target: /traefik.toml
      - type: bind
        source: ../prometheus-westnetz-acme.json
        target: /acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:traefik.${HOSTNAME}"
      - "traefik.frontend.auth.basic=${AUTH_BASIC}"
      - "traefik.docker.network=traefik"
      - "traefik.port=8080"
    networks:
      - traefik

networks:
  prometheus-exporters:
  prometheus-frontend:
  traefik:
    external: true

volumes:
  grafana:
  prometheus:
